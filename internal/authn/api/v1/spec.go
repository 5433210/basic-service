// Package apiv1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.8.3 DO NOT EDIT.
package apiv1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
